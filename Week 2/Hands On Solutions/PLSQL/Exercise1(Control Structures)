-- SCENARIO 1 : 
-- Qn. The bank wants to apply a discount to loan interest rates for customers above 60 years old.
-- Write a PL/SQL block that loops through all customers, checks their age, and if they are above 60, apply a 1% discount to their current loan interest rates.

-- Ans.
DECLARE
    v_age NUMBER;
BEGIN
    FOR c IN (SELECT CustomerID, Name, DOB FROM Customers) LOOP
        -- Calculate age
        v_age := TRUNC(MONTHS_BETWEEN(SYSDATE, c.DOB) / 12);

        -- Apply 1% discount if customer is above 60
        IF v_age > 60 THEN
            UPDATE Loans
            SET InterestRate = InterestRate - 1
            WHERE CustomerID = c.CustomerID;

            -- Print confirmation
            DBMS_OUTPUT.PUT_LINE('Discount applied for ' || c.Name || ' (Age: ' || v_age || ')');
        END IF;
    END LOOP;

    COMMIT;
END;
/

-- SCENARIO 2 :
-- A customer can be promoted to VIP status based on their balance.
-- Question: Write a PL/SQL block that iterates through all customers and sets a flag IsVIP to TRUE for those with a balance over $10,000.
BEGIN
    FOR c IN (SELECT CustomerID, Name, Balance FROM Customers) LOOP
        IF c.Balance > 10000 THEN
            UPDATE Customers
            SET IsVIP = 'TRUE'
            WHERE CustomerID = c.CustomerID;

            DBMS_OUTPUT.PUT_LINE(c.Name || ' promoted to VIP.');
        ELSE
            UPDATE Customers
            SET IsVIP = 'FALSE'
            WHERE CustomerID = c.CustomerID;

            DBMS_OUTPUT.PUT_LINE(c.Name || ' is not VIP.');
        END IF;
    END LOOP;

    COMMIT;
END;
/

-- Scenario 3: The bank wants to send reminders to customers whose loans are due within the next 30 days.
-- Question: Write a PL/SQL block that fetches all loans due in the next 30 days and prints a reminder message for each customer.
--  demo data :
INSERT INTO Loans (LoanID, CustomerID, LoanAmount, InterestRate, StartDate, EndDate)
VALUES (3, 2, 4000, 5, SYSDATE, SYSDATE + 15);  -- Due in 15 days
-- Solution: 
DECLARE
    v_name Customers.Name%TYPE;
BEGIN
    FOR l IN (
        SELECT LoanID, CustomerID, EndDate
        FROM Loans
        WHERE EndDate BETWEEN SYSDATE AND SYSDATE + 30
    ) LOOP
        -- Get customer name using CustomerID
        SELECT Name INTO v_name
        FROM Customers
        WHERE CustomerID = l.CustomerID;

        -- Print reminder message
        DBMS_OUTPUT.PUT_LINE('ðŸ“¢ Reminder: Loan ' || l.LoanID || ' for ' || v_name ||
                             ' is due on ' || TO_CHAR(l.EndDate, 'DD-MON-YYYY'));
    END LOOP;
END;
/

